Módulo 01:
***Instalando Django Rest API***

Entendemos o que é uma API;

Realizamos uma requisição GET retornando um Json;

Instalamos o Django Rest Framework.

----------------------------------------------------------------------------------------------------------------------------

Módulo 02:
*** Modelos, Admin e Serializers ***

Criamos o modelo de aluno e de curso;

Configuramos o Django Admin para criar, editar, listar e deletar alunos, alunas ou cursos;

Criamos a classe responsável para serializar os dados.

## Caso não tenha incluido o arquivo de models dentro de settings.py e tentar executar a migration ele não acontece nada

executar -> python manage.py makemigrations

(venv) C:\Users\biel7\Documents\GITPROJECTS\Django-API-Test>python manage.py makemigrations
No changes detected

## após salvar o arquivo e executar novamente a criação das migrations, abaixo o resultado

(venv) C:\Users\biel7\Documents\GITPROJECTS\Django-API-Test>python manage.py makemigrations
Migrations for 'escola':
  escola\migrations\0001_initial.py
    - Create model Aluno
    - Create model Curso


## Executar as migrations -> ython manage.py migrate

(venv) C:\Users\biel7\Documents\GITPROJECTS\Django-API-Test>python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, contenttypes, escola, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying escola.0001_initial... OK
  Applying sessions.0001_initial... OK


## Criando Super Users


(venv) C:\Users\biel7\Documents\GITPROJECTS\Django-API-Test>python manage.py createsuperuser
Usuário (leave blank to use 'biel7'): biel
Endereço de email: gregorio.couto@outlook.com
Password: 2202
Password (again): 2202
Esta senha é muito curta. Ela precisa conter pelo menos 8 caracteres.
Esta senha é inteiramente numérica.
Bypass password validation and create user anyway? [y/N]: y       
Superuser created successfully.


## SERIALIZER
Pega as informações e converte de JSON para PYTHON e vice versa
Ou seja, é uma ponte entre a web e o Python, convertendo os formatos 

----------------------------------------------------------------------------------------------------------------------------

Módulo 03:
*** Viewset, Urls e requisições GET e POST ***

Criamos as classes AlunosViewSet e CursosViewSet para usufruir das principais ;

Realizamos uma requisição GET retornando um Json;

Instalamos o Django Rest Framework.


-> Um modelo é a fonte única e definitiva de informações sobre seus dados e não um Viewset.

----------------------------------------------------------------------------------------------------------------------------

Módulo 04:
*** Atualizando e deletando recursos ***


